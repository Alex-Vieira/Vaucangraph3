package vaucangraph.view;

import java.awt.Dimension;
import java.awt.event.ItemEvent;
import utils.file.FileUtils;
import utils.math.MetricConversor;
import vaucangraph.model.Project;
import vaucangraph.model.Style;
import vaucangraph.model.enumeration.ProjectType;

/**
 * <b>Vaucangraph 2</b> - A evolução de uma ferramenta para desenho de autômatos
 * e grafos com geração de códigos Vaucanson-G <br><br>
 *
 * Desenvolvida por: <br><br>
 * Kleber Kruger <br>
 * José Ademar Peixoto de Souza <br>
 *
 * @version 2.0
 * @since 2010-05-15
 *
 * @author Kleber Kruger
 * @author José Ademar Peixoto de Souza
 */
public class NewProject extends javax.swing.JDialog {

    private Vaucangraph vcg;

    /** Creates new form NewProject */
    public NewProject(Vaucangraph vcg, boolean modal) {
        super(vcg, modal);
        this.vcg = vcg;

        initComponents();
        configure(vcg);
    }

    private void configure(Vaucangraph vcg) {

        jpGraphType.setVisible(false);
        jlStatus.setVisible(false);
        jtfName.setText("Sem título-"
                + (vcg.getProjects().size() + 1));
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        typeGroup = new javax.swing.ButtonGroup();
        graphTypeGroup = new javax.swing.ButtonGroup();
        scaleGroup = new javax.swing.ButtonGroup();
        jpBackground = new javax.swing.JPanel();
        jlName = new javax.swing.JLabel();
        jtfName = new javax.swing.JTextField();
        jsSeparator1 = new javax.swing.JSeparator();
        jpType = new javax.swing.JPanel();
        jrbAutomaton = new javax.swing.JRadioButton();
        jrbGraph = new javax.swing.JRadioButton();
        jpGraphType = new javax.swing.JPanel();
        jrbDirectedGraph = new javax.swing.JRadioButton();
        jrbUndirectedGraph = new javax.swing.JRadioButton();
        jpDescription = new javax.swing.JPanel();
        jspDescription = new javax.swing.JScrollPane();
        jtpDescription = new javax.swing.JTextPane();
        jlStatus = new javax.swing.JLabel();
        jsSeparator2 = new javax.swing.JSeparator();
        jbCancel = new javax.swing.JButton();
        jbOk = new javax.swing.JButton();
        jpDimension = new javax.swing.JPanel();
        jlWidht = new javax.swing.JLabel();
        jlHeight = new javax.swing.JLabel();
        jsWidth = new javax.swing.JSpinner();
        jsHeight = new javax.swing.JSpinner();
        jcbScale = new javax.swing.JComboBox();
        jtbPicture = new javax.swing.JToggleButton();
        jtbLandscape = new javax.swing.JToggleButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Novo projeto");
        setResizable(false);

        jlName.setText("Nome do projeto:");

        jtfName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jtfNameKeyReleased(evt);
            }
        });

        jpType.setBorder(javax.swing.BorderFactory.createTitledBorder("Tipo"));

        typeGroup.add(jrbAutomaton);
        jrbAutomaton.setSelected(true);
        jrbAutomaton.setText("Autômato");
        jrbAutomaton.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jrbAutomatonItemStateChanged(evt);
            }
        });

        typeGroup.add(jrbGraph);
        jrbGraph.setText("Grafo");
        jrbGraph.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jrbGraphItemStateChanged(evt);
            }
        });

        jpGraphType.setEnabled(false);

        graphTypeGroup.add(jrbDirectedGraph);
        jrbDirectedGraph.setSelected(true);
        jrbDirectedGraph.setText("Dirigido");
        jrbDirectedGraph.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jrbDirectedGraphItemStateChanged(evt);
            }
        });

        graphTypeGroup.add(jrbUndirectedGraph);
        jrbUndirectedGraph.setText("Não dirigido");
        jrbUndirectedGraph.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jrbUndirectedGraphItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout jpGraphTypeLayout = new javax.swing.GroupLayout(jpGraphType);
        jpGraphType.setLayout(jpGraphTypeLayout);
        jpGraphTypeLayout.setHorizontalGroup(
            jpGraphTypeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpGraphTypeLayout.createSequentialGroup()
                .addContainerGap(23, Short.MAX_VALUE)
                .addGroup(jpGraphTypeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jrbDirectedGraph, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jrbUndirectedGraph, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        jpGraphTypeLayout.setVerticalGroup(
            jpGraphTypeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpGraphTypeLayout.createSequentialGroup()
                .addComponent(jrbDirectedGraph)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jrbUndirectedGraph))
        );

        javax.swing.GroupLayout jpTypeLayout = new javax.swing.GroupLayout(jpType);
        jpType.setLayout(jpTypeLayout);
        jpTypeLayout.setHorizontalGroup(
            jpTypeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpTypeLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpTypeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jpTypeLayout.createSequentialGroup()
                        .addComponent(jpGraphType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(jpTypeLayout.createSequentialGroup()
                        .addGroup(jpTypeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jrbAutomaton, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jrbGraph, javax.swing.GroupLayout.DEFAULT_SIZE, 89, Short.MAX_VALUE))
                        .addGap(185, 185, 185))))
        );
        jpTypeLayout.setVerticalGroup(
            jpTypeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpTypeLayout.createSequentialGroup()
                .addComponent(jrbAutomaton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jrbGraph)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jpGraphType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jpDescription.setBorder(javax.swing.BorderFactory.createTitledBorder("Descrição"));

        jtpDescription.setContentType("text/html");
        jtpDescription.setEditable(false);
        jtpDescription.setText("<html>\n  <body>\n    <p style=\"margin-top: 0\" align=\"justify\"> <font face=\"Calibri\" size=4>\n    \n    Cria um novo projeto conforme a dimensão (largura x altura) específicadas pelo usuário.\n\n    </font></p>\n  </body>\n</html>\n");
        jtpDescription.setMaximumSize(new java.awt.Dimension(412, 21));
        jtpDescription.setMinimumSize(new java.awt.Dimension(412, 21));
        jtpDescription.setPreferredSize(new java.awt.Dimension(412, 21));
        jspDescription.setViewportView(jtpDescription);

        javax.swing.GroupLayout jpDescriptionLayout = new javax.swing.GroupLayout(jpDescription);
        jpDescription.setLayout(jpDescriptionLayout);
        jpDescriptionLayout.setHorizontalGroup(
            jpDescriptionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jspDescription, javax.swing.GroupLayout.DEFAULT_SIZE, 281, Short.MAX_VALUE)
        );
        jpDescriptionLayout.setVerticalGroup(
            jpDescriptionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jspDescription, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        jlStatus.setForeground(java.awt.Color.red);
        jlStatus.setIcon(new javax.swing.ImageIcon(getClass().getResource("/vaucangraph/icons/error.png"))); // NOI18N

        jbCancel.setText("Cancelar");
        jbCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbCancelActionPerformed(evt);
            }
        });

        jbOk.setText("OK");
        jbOk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbOkActionPerformed(evt);
            }
        });

        jpDimension.setBorder(javax.swing.BorderFactory.createTitledBorder("Dimensão"));

        jlWidht.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jlWidht.setText("Largura:");

        jlHeight.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jlHeight.setText("Altura:");

        jsWidth.setModel(new javax.swing.SpinnerNumberModel(400, 50, 50000, 1));
        jsWidth.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jsWidthStateChanged(evt);
            }
        });

        jsHeight.setModel(new javax.swing.SpinnerNumberModel(400, 50, 50000, 1));
        jsHeight.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jsHeightStateChanged(evt);
            }
        });

        jcbScale.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "pixels", "centímetros" }));
        jcbScale.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jcbScaleItemStateChanged(evt);
            }
        });

        jtbPicture.setIcon(new javax.swing.ImageIcon(getClass().getResource("/vaucangraph/icons/picture.png"))); // NOI18N
        jtbPicture.setSelected(true);
        jtbPicture.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtbPictureActionPerformed(evt);
            }
        });

        jtbLandscape.setIcon(new javax.swing.ImageIcon(getClass().getResource("/vaucangraph/icons/landscape.png"))); // NOI18N
        jtbLandscape.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtbLandscapeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jpDimensionLayout = new javax.swing.GroupLayout(jpDimension);
        jpDimension.setLayout(jpDimensionLayout);
        jpDimensionLayout.setHorizontalGroup(
            jpDimensionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpDimensionLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpDimensionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jlHeight, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jlWidht, javax.swing.GroupLayout.DEFAULT_SIZE, 57, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jpDimensionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jsHeight, javax.swing.GroupLayout.DEFAULT_SIZE, 97, Short.MAX_VALUE)
                    .addComponent(jsWidth, javax.swing.GroupLayout.DEFAULT_SIZE, 97, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jpDimensionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jcbScale, 0, 97, Short.MAX_VALUE)
                    .addGroup(jpDimensionLayout.createSequentialGroup()
                        .addComponent(jtbPicture, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jtbLandscape, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jpDimensionLayout.setVerticalGroup(
            jpDimensionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpDimensionLayout.createSequentialGroup()
                .addGroup(jpDimensionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jlWidht)
                    .addComponent(jsWidth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jcbScale, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jpDimensionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jlHeight)
                    .addComponent(jsHeight, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtbPicture)
                    .addComponent(jtbLandscape)))
        );

        jpDimensionLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jcbScale, jsHeight, jsWidth});

        javax.swing.GroupLayout jpBackgroundLayout = new javax.swing.GroupLayout(jpBackground);
        jpBackground.setLayout(jpBackgroundLayout);
        jpBackgroundLayout.setHorizontalGroup(
            jpBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpBackgroundLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jlName)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jtfName, javax.swing.GroupLayout.DEFAULT_SIZE, 205, Short.MAX_VALUE)
                .addContainerGap())
            .addComponent(jsSeparator2, javax.swing.GroupLayout.DEFAULT_SIZE, 313, Short.MAX_VALUE)
            .addGroup(jpBackgroundLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jlStatus, javax.swing.GroupLayout.DEFAULT_SIZE, 293, Short.MAX_VALUE)
                .addContainerGap())
            .addComponent(jsSeparator1, javax.swing.GroupLayout.DEFAULT_SIZE, 313, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpBackgroundLayout.createSequentialGroup()
                .addContainerGap(135, Short.MAX_VALUE)
                .addComponent(jbCancel)
                .addGap(18, 18, 18)
                .addComponent(jbOk)
                .addContainerGap())
            .addGroup(jpBackgroundLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jpType, javax.swing.GroupLayout.Alignment.LEADING, 0, 293, Short.MAX_VALUE)
                    .addComponent(jpDescription, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jpDimension, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        jpBackgroundLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jbCancel, jbOk});

        jpBackgroundLayout.setVerticalGroup(
            jpBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpBackgroundLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlName)
                    .addComponent(jtfName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jsSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jpType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jpDimension, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jpDescription, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jlStatus)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jsSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(8, 8, 8)
                .addGroup(jpBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbCancel)
                    .addComponent(jbOk))
                .addContainerGap())
        );

        jpBackgroundLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jbCancel, jbOk});

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jpBackground, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jpBackground, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        setBounds((screenSize.width-329)/2, (screenSize.height-453)/2, 329, 453);
    }// </editor-fold>//GEN-END:initComponents

    private void jbCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbCancelActionPerformed
        close();
    }//GEN-LAST:event_jbCancelActionPerformed

    private void jbOkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbOkActionPerformed
        createNewProject();
    }//GEN-LAST:event_jbOkActionPerformed

    private void jtfNameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfNameKeyReleased
        checkFileName();
    }//GEN-LAST:event_jtfNameKeyReleased

    private void jrbUndirectedGraphItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jrbUndirectedGraphItemStateChanged
        // TODO add your handling code here:
}//GEN-LAST:event_jrbUndirectedGraphItemStateChanged

    private void jrbDirectedGraphItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jrbDirectedGraphItemStateChanged
        // TODO add your handling code here:
}//GEN-LAST:event_jrbDirectedGraphItemStateChanged

    private void jrbGraphItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jrbGraphItemStateChanged
        jpGraphType.setVisible(jrbGraph.isSelected());
}//GEN-LAST:event_jrbGraphItemStateChanged

    private void jrbAutomatonItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jrbAutomatonItemStateChanged
        // TODO add your handling code here:
}//GEN-LAST:event_jrbAutomatonItemStateChanged

    private void jsWidthStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jsWidthStateChanged
        dimensionChanged();
    }//GEN-LAST:event_jsWidthStateChanged

    private void jsHeightStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jsHeightStateChanged
        dimensionChanged();
    }//GEN-LAST:event_jsHeightStateChanged

    private void jcbScaleItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jcbScaleItemStateChanged
        if (evt.getStateChange() == ItemEvent.SELECTED) {
            convertMeasurements();
        }
    }//GEN-LAST:event_jcbScaleItemStateChanged

    private void jtbPictureActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtbPictureActionPerformed
        changeMeasurements();
    }//GEN-LAST:event_jtbPictureActionPerformed

    private void jtbLandscapeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtbLandscapeActionPerformed
        changeMeasurements();
    }//GEN-LAST:event_jtbLandscapeActionPerformed

    private void checkFileName() {
        int result = FileUtils.fileNameIsValid(
                FileUtils.getPathProjectFolder(), jtfName.getText());

        if (result == FileUtils.FILENAME_EMPTY) { // Caso inválido, define a mensagem de erro
            jlStatus.setText("Digite um nome para o arquivo");
            jlStatus.setVisible(true);

        } else if (result == FileUtils.FILENAME_TOO_LARGE) { // Caso inválido, define a mensagem de erro
            jlStatus.setText("Nome do arquivo muito grande");
            jlStatus.setVisible(true);

        } else if (result == FileUtils.FILENAME_INVALID_CHARACTERS) { // Caso inválido, define a mensagem de erro
            jlStatus.setText("Caracteres inválidos: \n"
                    + "\\ / : * : \" < > |");
            jlStatus.setVisible(true);

        } else {
            jlStatus.setText("");
            jlStatus.setVisible(false);
        }
        jbOk.setEnabled(!jlStatus.isVisible());
    }

    private void dimensionChanged() {
        if (Double.parseDouble(jsWidth.getValue() + "")
                > Double.parseDouble(jsHeight.getValue() + "")) {

            jtbPicture.setSelected(false);
            jtbLandscape.setSelected(true);

        } else {
            jtbPicture.setSelected(true);
            jtbLandscape.setSelected(false);
        }
    }

    private void convertMeasurements() {

        double widht = Double.parseDouble(jsWidth.getValue() + "");
        double height = Double.parseDouble(jsHeight.getValue() + "");

        // Escala em pixels
        if (jcbScale.getSelectedItem().equals("pixels")) {

            jsWidth.setValue(MetricConversor.toPixels(widht));
            jsHeight.setValue(MetricConversor.toPixels(height));

            // Define o novo modelo que permite apenas inteiros
            jsWidth.setModel(new javax.swing.SpinnerNumberModel(
                    Integer.parseInt(jsWidth.getValue() + ""), 50, 50000, 1));
            jsHeight.setModel(new javax.swing.SpinnerNumberModel(
                    Integer.parseInt(jsHeight.getValue() + ""), 50, 50000, 1));
        } // Escala em centímetros
        else if (jcbScale.getSelectedItem().equals("centímetros")) {

            jsWidth.setValue(MetricConversor.toCentimeters(widht));
            jsHeight.setValue(MetricConversor.toCentimeters(height));

            // Define o novo modelo que permite double
            jsWidth.setModel(new javax.swing.SpinnerNumberModel(
                    Double.parseDouble(jsWidth.getValue() + ""), 1.764d, 1763.889d, 1.0d));
            jsHeight.setModel(new javax.swing.SpinnerNumberModel(
                    Double.parseDouble(jsHeight.getValue() + ""), 1.764d, 1763.889d, 1.0d));
        }
    }

    private void changeMeasurements() {
        Object aux = jsWidth.getValue();
        jsWidth.setValue(jsHeight.getValue());
        jsHeight.setValue(aux);
    }

    private void close() {
        dispose();
    }

    private void createNewProject() {
        // Obtém os valores de largura e altura
        int width = inPixels(jsWidth.getValue());
        int height = inPixels(jsHeight.getValue());

        // Fecha a janela de novo projeto
        dispose();

        // Cria o novo projeto de acordo com as informações recebidas
        Project project = new Project(jtfName.getText(),
                getSelectedProjectType(), new Dimension(width, height));

        // Cria um novo painél de projetos
        vcg.addNewProject(project);
    }

    private ProjectType getSelectedProjectType() {
        if (jrbAutomaton.isSelected()) {
            return ProjectType.AUTOMATON;
        } else if (jrbDirectedGraph.isSelected()) {
            return ProjectType.GRAPH_DIRECTED;
        } else if (jrbUndirectedGraph.isSelected()) {
          return ProjectType.GRAPH_UNDIRECTED;
        }
        return null;
    }

    private int inPixels(Object value) {
        if (jcbScale.getSelectedItem().equals("centímetros")) {
            return MetricConversor.toPixels(Double.parseDouble(value + ""));
        }
        return Integer.parseInt(value + "");
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                NewProject dialog = new NewProject(new Vaucangraph(new Style()), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {

                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });

                dialog.setVisible(true);
            }
        });


    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup graphTypeGroup;
    private javax.swing.JButton jbCancel;
    private javax.swing.JButton jbOk;
    private javax.swing.JComboBox jcbScale;
    private javax.swing.JLabel jlHeight;
    private javax.swing.JLabel jlName;
    private javax.swing.JLabel jlStatus;
    private javax.swing.JLabel jlWidht;
    private javax.swing.JPanel jpBackground;
    private javax.swing.JPanel jpDescription;
    private javax.swing.JPanel jpDimension;
    private javax.swing.JPanel jpGraphType;
    private javax.swing.JPanel jpType;
    private javax.swing.JRadioButton jrbAutomaton;
    private javax.swing.JRadioButton jrbDirectedGraph;
    private javax.swing.JRadioButton jrbGraph;
    private javax.swing.JRadioButton jrbUndirectedGraph;
    private javax.swing.JSpinner jsHeight;
    private javax.swing.JSeparator jsSeparator1;
    private javax.swing.JSeparator jsSeparator2;
    private javax.swing.JSpinner jsWidth;
    private javax.swing.JScrollPane jspDescription;
    private javax.swing.JToggleButton jtbLandscape;
    private javax.swing.JToggleButton jtbPicture;
    private javax.swing.JTextField jtfName;
    private javax.swing.JTextPane jtpDescription;
    private javax.swing.ButtonGroup scaleGroup;
    private javax.swing.ButtonGroup typeGroup;
    // End of variables declaration//GEN-END:variables
}
